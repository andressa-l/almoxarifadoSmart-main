// <auto-generated />
using System;
using AlmoxarifadoSmart.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlmoxarifadoSmart.Infrastructure.Migrations
{
    [DbContext(typeof(db_almoxarifadoContext))]
    [Migration("20240311152332_DatabaseV1")]
    partial class DatabaseV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Benchmarking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Economia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Loja")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("Benchmarkings");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.CategoriaMotivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("CategoriaMotivo", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cargo");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("id_departamento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.LogModel", b =>
                {
                    b.Property<int>("iDlOG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iDlOG"), 1L, 1);

                    b.Property<string>("CodigoRobo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateLog")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etapa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProdutoAPI")
                        .HasColumnType("int");

                    b.Property<string>("InformacaoLog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioRobo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iDlOG");

                    b.ToTable("LOGROBO");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Motivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdCategoriamotivo")
                        .HasColumnType("int")
                        .HasColumnName("id_categoriamotivo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriamotivo");

                    b.ToTable("Motivo", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BranchmarkingId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descricao");

                    b.Property<int?>("EstoqueAtual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("estoque_atual")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int")
                        .HasColumnName("estoque_minimo");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("preco");

                    b.Property<int?>("ProdutoScraperModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.ProdutoScraperModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("Loja")
                        .HasColumnType("Int")
                        .HasColumnName("Loja");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("ProdutoScraper", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Requisicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("id_departamento");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    b.Property<string>("Prioridade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prioridade");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Requisicao", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.StoreProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdutoScraperModelId")
                        .HasColumnType("int");

                    b.Property<int>("Store")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoScraperModelId");

                    b.ToTable("StoreProdutos");
                });

            modelBuilder.Entity("ProdutoRequisicao", b =>
                {
                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("id_produto");

                    b.Property<int>("IdRequisicao")
                        .HasColumnType("int")
                        .HasColumnName("id_requisicao");

                    b.HasKey("IdProduto", "IdRequisicao")
                        .HasName("PK__ProdutoR__9781356BD7E2EC26");

                    b.HasIndex("IdRequisicao");

                    b.ToTable("ProdutoRequisicao", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Benchmarking", b =>
                {
                    b.HasOne("AlmoxarifadoSmart.Core.Entities.Produto", "ProdutoNavegation")
                        .WithOne("Branchmarking")
                        .HasForeignKey("AlmoxarifadoSmart.Core.Entities.Benchmarking", "IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Produto_Benchmarking");

                    b.Navigation("ProdutoNavegation");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Motivo", b =>
                {
                    b.HasOne("AlmoxarifadoSmart.Core.Entities.CategoriaMotivo", "IdCategoriamotivoNavigation")
                        .WithMany("Motivos")
                        .HasForeignKey("IdCategoriamotivo")
                        .IsRequired()
                        .HasConstraintName("FK__Motivo__id_categ__45F365D3");

                    b.Navigation("IdCategoriamotivoNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.ProdutoScraperModel", b =>
                {
                    b.HasOne("AlmoxarifadoSmart.Core.Entities.Produto", "Produto")
                        .WithOne("ProdutoScraperModel")
                        .HasForeignKey("AlmoxarifadoSmart.Core.Entities.ProdutoScraperModel", "IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoScraper_Produto");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Requisicao", b =>
                {
                    b.HasOne("AlmoxarifadoSmart.Core.Entities.Departamento", "IdDepartamentoNavigation")
                        .WithMany("Requisicaos")
                        .HasForeignKey("IdDepartamento")
                        .IsRequired()
                        .HasConstraintName("FK__Requisica__id_de__440B1D61");

                    b.HasOne("AlmoxarifadoSmart.Core.Entities.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Requisicaos")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired()
                        .HasConstraintName("FK__Requisica__id_fu__44FF419A");

                    b.Navigation("IdDepartamentoNavigation");

                    b.Navigation("IdFuncionarioNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.StoreProdutoModel", b =>
                {
                    b.HasOne("AlmoxarifadoSmart.Core.Entities.ProdutoScraperModel", "ProdutoScraperModel")
                        .WithMany("Reports")
                        .HasForeignKey("ProdutoScraperModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoScraperModel");
                });

            modelBuilder.Entity("ProdutoRequisicao", b =>
                {
                    b.HasOne("AlmoxarifadoSmart.Core.Entities.Produto", null)
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProdutoRe__id_pr__4F7CD00D");

                    b.HasOne("AlmoxarifadoSmart.Core.Entities.Requisicao", null)
                        .WithMany()
                        .HasForeignKey("IdRequisicao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProdutoRe__id_re__4316F928");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.CategoriaMotivo", b =>
                {
                    b.Navigation("Motivos");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Departamento", b =>
                {
                    b.Navigation("Requisicaos");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Funcionario", b =>
                {
                    b.Navigation("Requisicaos");
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.Produto", b =>
                {
                    b.Navigation("Branchmarking")
                        .IsRequired();

                    b.Navigation("ProdutoScraperModel")
                        .IsRequired();
                });

            modelBuilder.Entity("AlmoxarifadoSmart.Core.Entities.ProdutoScraperModel", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
